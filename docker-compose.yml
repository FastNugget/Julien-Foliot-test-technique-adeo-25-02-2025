name: onetranslate

services:
  bff:
    build:
      context: YaourtErp-bff
      target: development
    env_file:
      - YaourtErp-bff/.env
    volumes:
      - ./YaourtErp-bff/src:/usr/src/app/src:rw,cached
      - ./YaourtErp-bff/package.json:/usr/src/app/package.json:rw,delegated
      - ./YaourtErp-bff/pnpm-lock.yaml:/usr/src/app/pnpm-lock.yaml:rw,delegated
      - ./YaourtErp-bff/node_modules:/usr/src/app/node_modules:rw,delegated
    depends_on:
      - backendApidomain
    networks:
      - networkApp
    ports:
      - target: 3000
        published: 8001
        protocol: tcp
  
  front:
    build:
      context: YaourtErp-front
      target: development
    volumes:
      - ./YaourtErp-front/src:/usr/src/app/src:rw,cached
      - ./YaourtErp-front/package.json:/usr/src/app/package.json:rw,delegated
      - ./YaourtErp-front/pnpm-lock.yaml:/usr/src/app/pnpm-lock.yaml:rw,delegated
      - ./YaourtErp-front/node_modules:/usr/src/app/node_modules:rw,delegated
    depends_on:
      - bff
    networks:
      - networkApp
    ports:
      - target: 5173
        published: 80
        protocol: tcp
  
  backendApidomain:
    image: ${imageNameBackend}
    ports:
      - ${portBindBackend}
    env_file:
      - YaourtErp-ApiDomain/env/.env-dev-docker
    build:
      context: YaourtErp-ApiDomain
      dockerfile: ./Dockerfile
    depends_on:
      - databasePostSetup
    restart: "on-failure"
    networks:
      - networkApp

  YaourtErpDatabaseDev1:
    image: ${imageNameDatabase}
    ports:
      - ${portBindDatabase1}
    volumes:
      - db-data-1:/data/db
    networks:
      - networkApp
    entrypoint: ["mongod", "--replSet", "myReplicaSet", "--bind_ip", "localhost,YaourtErpDatabaseDev1"]

  YaourtErpDatabaseDev2:
    image: ${imageNameDatabase}
    ports:
      - ${portBindDatabase2}
    volumes:
      - db-data-2:/data/db
    networks:
      - networkApp
    entrypoint: ["mongod", "--replSet", "myReplicaSet", "--bind_ip", "localhost,YaourtErpDatabaseDev2"]

  YaourtErpDatabaseDev3:
    image: ${imageNameDatabase}
    ports:
      - ${portBindDatabase3}
    volumes:
      - db-data-3:/data/db
    networks:
      - networkApp
    entrypoint: ["mongod", "--replSet", "myReplicaSet", "--bind_ip", "localhost,YaourtErpDatabaseDev3"]

  databasePostSetup:
    image: ${imageNameDatabase}
    depends_on:
      - YaourtErpDatabaseDev1
      - YaourtErpDatabaseDev2
      - oneTranslateDatabaseDev3
    volumes:
      - ./YaourtErp/dev-tools/mongodb/script/mongodb_cluster_configuration.sh:/scripts/mongodb_cluster_configuration.sh
    restart: "no"
    networks:
      - networkApp
    entrypoint: [ "bash", "/scripts/mongodb_cluster_configuration.sh"]

networks:
  networkApp:
    name: ${networkName}

volumes:
  db-data-1:
  db-data-2:
  db-data-3: